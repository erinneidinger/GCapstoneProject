@model groupCapstoneMusic.Models.Concert

    @{
        ViewBag.Title = "Details";
    }
    <h2>Details</h2>
<html>
<head>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
    </head>
<body>
    <h2>Find my Concert Venue:</h2>
    <div id="map"></div>
    <script>
        function initMap() {
            var venLocation = { lat: @Model.Lat, lng: @Model.Lng };

            var map = new google.maps.Map(document.getElementById('map'), { zoom: 12, center: venLocation });

            var marker = new google.maps.Marker({ position: venLocation, map: map, animation: google.maps.Animation.BOUNCE });

    //var infoWindow = new google.maps.InforWindow({
    //    content: (".details")
    //});

    //marker.addListener('click', function () {
    //    infoWindow.open(map, marker);
    //    });
    }

    </script>
    <script src="@Model.apiMapCall" async defer></script>
</body>
</html>

    <div class="details">


        <h4>Concert</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Venue)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Venue)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.StreetAddress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StreetAddress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.City)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.City)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.State)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.State)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Genre)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Genre)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Audience)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Audience)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConcertDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConcertDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConcertTime)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConcertTime)
            </dd>
            @if (Model.Musician != null)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Musician)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Musician)
                </dd>
            }

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @if (User.IsInRole("Customer"))
        {
            @Html.ActionLink("Back to List", "Index")
        }
        @if (User.IsInRole("Musician"))
        {
            @Html.ActionLink("Back to List", "MusicianConfirmation", new { id=ViewBag.CID})
        }

    </p>
