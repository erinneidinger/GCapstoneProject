@model groupCapstoneMusic.Models.Musician

@{
    ViewBag.Title = "FilteredSearch";
}

<h2>Filtered Search</h2>

@*Dropdown...Figuring out whether I should use it*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <h4>Find your desired genre:</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.LabelFor(model => model.SelectedGenre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedGenre, Model.ListOfGenres)
                @Html.ValidationMessageFor(model => model.SelectedGenre, "", new { @class = "text-danger" })
            </div>
        </div>

            @Html.LabelFor(model => model.SelectedGenre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedGenre, Model.ListOfGenres)
                @Html.ValidationMessageFor(model => model.SelectedGenre, "", new { @class = "text-danger" })
            </div>
        </div>




<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BandName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Zip)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Bio)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.SetRate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DatesAvailable)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StreetAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AverageMusicianRating)
        </th>
        <th></th>
    </tr>
    <tr>
        <td>
            @Html.DisplayFor(model => model.FirstName)
        </td>

        <td>
            @Html.DisplayFor(model => model.LastName)
        </td>

        <td>
            @Html.DisplayFor(model => model.BandName)
        </td>

        <td>
            @Html.DisplayFor(model => model.Email)
        </td>
        <td>
            @Html.DisplayFor(model => model.City)
        </td>

        <td>
            @Html.DisplayFor(model => model.State)
        </td>

        <td>
            @Html.DisplayFor(model => model.Zip)
        </td>

        <td>
            @Html.DisplayFor(model => model.Bio)
        </td>

        <td>
            @Html.DisplayFor(model => model.Genre)
        </td>

        <td>
            @Html.DisplayFor(model => model.SetRate)
        </td>

        <td>
            @Html.DisplayFor(model => model.DatesAvailable)
        </td>

        <td>
            @Html.DisplayFor(model => model.StreetAddress)
        </td>
        <td>
            @Html.DisplayFor(model => model.AverageMusicianRating)
        </td>
    </tr>
<td>
    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
    @Html.ActionLink("Message", "Create", "IMessage", new {id=item.ApplicationId }, null)
</td>
    </tr>
    }

</table>
